version: '3'

services:
  # Zabbix
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-5.0-latest
    ports:
      - '10051:10051'
    depends_on:
      - database
    environment:
      DB_SERVER_HOST: database
      DB_SERVER_PORT: 5432
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix
      POSTGRES_DB: zabbix

  zabbix-web:
    image: zabbix/zabbix-web-apache-pgsql:alpine-5.0-latest
    ports:
      - '8188:8080'
      - '8189:8443'
      # - "8188:80"
    depends_on:
      - database
      - zabbix-server
    environment:
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051
      DB_SERVER_HOST: database
      DB_SERVER_PORT: 5432
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix
      POSTGRES_DB: zabbix
      ZBX_SESSION_NAME: zbx_sessionid_new
    volumes:
      - ./ssl:/etc/ssl/apache2:ro

  database:
    image: postgres:14
    ports:
      - '15432:5432'
    environment:
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix

  zabbix-agent:
    image: zabbix/zabbix-agent:alpine-5.0-latest
    environment:
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051

  zabbix-proxy:
    image: zabbix/zabbix-proxy-sqlite3:alpine-5.0-latest
    environment:
      ZBX_PROXYMODE: 0
      ZBX_HOSTNAME: zabbix-proxy
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051

  zabbix-agent-proxy:
    image: zabbix/zabbix-agent:alpine-5.0-latest
    environment:
      ZBX_SERVER_HOST: zabbix-proxy
      ZBX_SERVER_PORT: 10051

  #########################################################
  # Bootstrap config
  #########################################################

  bootstrap:
    build:
      context: ./bootstrap
      dockerfile: Dockerfile
      args:
        ZBX_HOSTS_NUMBER: 10
    environment:
      ZBX_API_URL: http://zabbix-web:8080
      # ZBX_API_URL: http://zabbix-web:80
      ZBX_API_USER: Admin
      ZBX_API_PASSWORD: zabbix
    depends_on:
      - database
      - zabbix-server
      - zabbix-web

  #########################################################
  # Fake agents
  #########################################################

  # backend
  redis_backend:
    image: redis:alpine

  zas_backend_01:
    build: ../zas-agent
    volumes:
      - ../zas-agent/conf/zas_scenario_backend.cfg:/etc/zas_scenario.cfg
    environment:
      REDIS_HOST: redis_backend
    # restart: always

  zas_backend_02:
    build: ../zas-agent
    volumes:
      - ../zas-agent/conf/zas_scenario_backend.cfg:/etc/zas_scenario.cfg
    environment:
      REDIS_HOST: redis_backend

  # frontend
  redis_frontend:
    image: redis:alpine

  zas_frontend_01:
    build: ../zas-agent
    volumes:
      - ../zas-agent/conf/zas_scenario_frontend.cfg:/etc/zas_scenario.cfg
    environment:
      REDIS_HOST: redis_frontend

  zas_frontend_02:
    build: ../zas-agent
    volumes:
      - ../zas-agent/conf/zas_scenario_frontend.cfg:/etc/zas_scenario.cfg
    environment:
      REDIS_HOST: redis_frontend
